---
import "../styles/app.css";
import BlueSky from "$lib/components/icons/BlueSky.astro";
import GitHub from "$lib/components/icons/GitHub.astro";
import IconLink from "$lib/components/IconLink.astro";
import type { ComponentProps } from "astro/types";

type Props = {
	title: string;
	description: string;
	image_url?: string;
};

const iconRecord = {
	github: GitHub,
	bluesky: BlueSky,
} as const;

type IconLinkProps = ComponentProps<typeof IconLink>;
type Link = {
	icon: keyof typeof iconRecord;
} & IconLinkProps;

const links: Link[] = [
	{
		ariaLabel: "github",
		href: "https://github.com/joshwashywash",
		icon: "github",
	},
	{
		ariaLabel: "bluesky",
		href: "https://bsky.app/profile/joshwashywash.bsky.social",
		icon: "bluesky",
	},
];

const { description, image_url = "/me.jpg", title } = Astro.props;
const meta_image_url = new URL(image_url, Astro.url);
---

<html class="font-noto-serif motion-safe:scroll-smooth">
	<head>
		<!-- Global Metadata -->
		<meta charset="utf-8" />
		<meta
			name="viewport"
			content="width=device-width,initial-scale=1"
		/>
		<link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>

		<!-- Canonical URL -->
		<link
			rel="canonical"
			href={Astro.url}
		/>

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta
			name="title"
			content={title}
		/>
		<meta
			name="description"
			content={description}
		/>

		<!-- Open Graph / Facebook -->
		<meta
			property="og:description"
			content={description}
		/>
		<meta
			property="og:image"
			content={meta_image_url}
		/>
		<meta
			property="og:title"
			content={title}
		/>
		<meta
			property="og:type"
			content="website"
		/>
		<meta
			property="og:url"
			content={Astro.url}
		/>

		<!-- Twitter -->
		<meta
			property="twitter:card"
			content="summary_large_image"
		/>
		<meta
			property="twitter:description"
			content={description}
		/>
		<meta
			property="twitter:image"
			content={meta_image_url}
		/>
		<meta
			property="twitter:title"
			content={title}
		/>
		<meta
			property="twitter:url"
			content={Astro.url}
		/>
	</head>

	<body
		class="flex flex-col justify-center gap-8 bg-neutral-100 py-8 text-neutral-900 md:grid md:flex-none dark:bg-neutral-900 dark:text-neutral-100"
	>
		<div class="flex">
			<a
				href="/"
				class="flex-1 text-xl underline hover:text-neutral-500"
				aria-label="home"
			>
				josh oertel
			</a>
			<nav class="flex gap-4">
				{
					links.map(({ ariaLabel, href, icon }) => {
						const Icon = iconRecord[icon];
						return (
							<IconLink
								{ariaLabel}
								{href}
							>
								<Icon />
							</IconLink>
						);
					})
				}
			</nav>
		</div>
		<main
			class="prose lg:prose-xl prose-neutral dark:prose-invert target:prose-headings:bg-neutral-200 dark:target:prose-headings:bg-neutral-800"
		>
			<slot />
		</main>
	</body>
</html>
